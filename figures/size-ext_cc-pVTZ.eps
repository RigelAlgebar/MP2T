%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 767 587
%%LanguageLevel: 2
%%Creator: OriginLab Corporation
%%Title: (\\Mac\Home\Desktop\Graph2.eps)
%%CreationDate: Wed Aug 10 11:49:35 2016
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshow{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix}wd
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshow ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
%%BeginFont: /MC1_ArialBold
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 215.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC1_ArialBold def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1286 -771 4096 2162] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 46/s46 put
Encoding 48/s48 put
Encoding 49/s49 put
Encoding 50/s50 put
Encoding 51/s51 put
Encoding 52/s52 put
Encoding 53/s53 put
Encoding 54/s54 put
Encoding 55/s55 put
Encoding 56/s56 put
Encoding 57/s57 put
/BoundingBoxes 13 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s46 [0 -434 569 1854] def
/s48 [0 -434 1139 1854] def
/s49 [0 -434 1139 1854] def
/s50 [0 -434 1139 1854] def
/s51 [0 -434 1139 1854] def
/s52 [0 -434 1139 1854] def
/s53 [0 -434 1139 1854] def
/s54 [0 -434 1139 1854] def
/s55 [0 -434 1139 1854] def
/s56 [0 -434 1139 1854] def
/s57 [0 -434 1139 1854] def
end
/Metrics 13 dict def
 Metrics begin
/s32 569 def
/s46 569 def
/s48 1139 def
/s49 1139 def
/s50 1139 def
/s51 1139 def
/s52 1139 def
/s53 1139 def
/s54 1139 def
/s55 1139 def
/s56 1139 def
/s57 1139 def
end
/CharProcs 13 dict def
CharProcs begin
/.notdef {} def
/s46 {
147 0 m
147 281 147 0 147 281 c
428 281 147 281 428 281 c
428 0 428 281 428 0 c
147 0 428 0 147 0 c
closepath } bind def
/s48 {
562 1472 m
704 1472 815 1421.33 895 1320 c
990.33 1200 1038 1001 1038 723 c
1038 445.67 990 246.33 894 125 c
814.67 25 704 -25 562 -25 c
419.33 -25 304.33 29.83 217 139.5 c
129.67 249.17 86 444.67 86 726 c
86 1002 134 1200.67 230 1322 c
309.33 1422 420 1472 562 1472 c
closepath 562 1239 m
528 1239 497.67 1228.17 471 1206.5 c
444.33 1184.83 423.67 1146 409 1090 c
389.67 1017.33 380 895 380 723 c
380 551 388.67 432.83 406 368.5 c
423.33 304.17 445.17 261.33 471.5 240 c
497.83 218.67 528 208 562 208 c
596 208 626.33 218.83 653 240.5 c
679.67 262.17 700.33 301 715 357 c
734.33 429 744 551 744 723 c
744 895 735.33 1013.17 718 1077.5 c
700.67 1141.83 678.83 1184.83 652.5 1206.5 c
626.17 1228.17 596 1239 562 1239 c
closepath } bind def
/s49 {
806 0 m
525 0 806 0 525 0 c
525 1059 525 0 525 1059 c
422.33 963 301.33 892 162 846 c
162 1101 162 846 162 1101 c
235.33 1125 315 1170.5 401 1237.5 c
487 1304.5 546 1382.67 578 1472 c
806 1472 578 1472 806 1472 c
806 0 806 1472 806 0 c
closepath } bind def
/s50 {
1036 261 m
1036 0 1036 261 1036 0 c
51 0 1036 0 51 0 c
61.67 98.67 93.67 192.17 147 280.5 c
200.33 368.83 305.67 486 463 632 c
589.67 750 667.33 830 696 872 c
734.67 930 754 987.33 754 1044 c
754 1106.67 737.17 1154.83 703.5 1188.5 c
669.83 1222.17 623.33 1239 564 1239 c
505.33 1239 458.67 1221.33 424 1186 c
389.33 1150.67 369.33 1092 364 1010 c
84 1038 364 1010 84 1038 c
100.67 1192.67 153 1303.67 241 1371 c
329 1438.33 439 1472 571 1472 c
715.67 1472 829.33 1433 912 1355 c
994.67 1277 1036 1180 1036 1064 c
1036 998 1024.17 935.17 1000.5 875.5 c
976.83 815.83 939.33 753.33 888 688 c
854 644.67 792.67 582.33 704 501 c
615.33 419.67 559.17 365.67 535.5 339 c
511.83 312.33 492.67 286.33 478 261 c
1036 261 478 261 1036 261 c
closepath } bind def
/s51 {
77 389 m
349 422 77 389 349 422 c
357.67 352.67 381 299.67 419 263 c
457 226.33 503 208 557 208 c
615 208 663.83 230 703.5 274 c
743.17 318 763 377.33 763 452 c
763 522.67 744 578.67 706 620 c
668 661.33 621.67 682 567 682 c
531 682 488 675 438 661 c
469 890 438 661 469 890 c
545 888 603 904.5 643 939.5 c
683 974.5 703 1021 703 1079 c
703 1128.33 688.33 1167.67 659 1197 c
629.67 1226.33 590.67 1241 542 1241 c
494 1241 453 1224.33 419 1191 c
385 1157.67 364.33 1109 357 1045 c
98 1089 357 1045 98 1089 c
116 1177.67 143.17 1248.5 179.5 1301.5 c
215.83 1354.5 266.5 1396.17 331.5 1426.5 c
396.5 1456.83 469.33 1472 550 1472 c
688 1472 798.67 1428 882 1340 c
950.67 1268 985 1186.67 985 1096 c
985 967.33 914.67 864.67 774 788 c
858 770 925.17 729.67 975.5 667 c
1025.83 604.33 1051 528.67 1051 440 c
1051 311.33 1004 201.67 910 111 c
816 20.33 699 -25 559 -25 c
426.33 -25 316.33 13.17 229 89.5 c
141.67 165.83 91 265.67 77 389 c
closepath } bind def
/s52 {
638 0 m
638 295 638 0 638 295 c
38 295 638 295 38 295 c
38 541 38 295 38 541 c
674 1472 38 541 674 1472 c
910 1472 674 1472 910 1472 c
910 542 910 1472 910 542 c
1092 542 910 542 1092 542 c
1092 295 1092 542 1092 295 c
910 295 1092 295 910 295 c
910 0 910 295 910 0 c
638 0 910 0 638 0 c
closepath 638 542 m
638 1043 638 542 638 1043 c
301 542 638 1043 301 542 c
638 542 301 542 638 542 c
closepath } bind def
/s53 {
91 377 m
371 406 91 377 371 406 c
379 342.67 402.67 292.5 442 255.5 c
481.33 218.5 526.67 200 578 200 c
636.67 200 686.33 223.83 727 271.5 c
767.67 319.17 788 391 788 487 c
788 577 767.83 644.5 727.5 689.5 c
687.17 734.5 634.67 757 570 757 c
489.33 757 417 721.33 353 650 c
125 683 353 650 125 683 c
269 1446 125 683 269 1446 c
1012 1446 269 1446 1012 1446 c
1012 1183 1012 1446 1012 1183 c
482 1183 1012 1183 482 1183 c
438 934 482 1183 438 934 c
500.67 965.33 564.67 981 630 981 c
754.67 981 860.33 935.67 947 845 c
1033.67 754.33 1077 636.67 1077 492 c
1077 371.33 1042 263.67 972 169 c
876.67 39.67 744.33 -25 575 -25 c
439.67 -25 329.33 11.33 244 84 c
158.67 156.67 107.67 254.33 91 377 c
closepath } bind def
/s54 {
1039 1107 m
767 1077 1039 1107 767 1077 c
760.33 1133 743 1174.33 715 1201 c
687 1227.67 650.67 1241 606 1241 c
546.67 1241 496.5 1214.33 455.5 1161 c
414.5 1107.67 388.67 996.67 378 828 c
448 910.67 535 952 639 952 c
756.33 952 856.83 907.33 940.5 818 c
1024.17 728.67 1066 613.33 1066 472 c
1066 322 1022 201.67 934 111 c
846 20.33 733 -25 595 -25 c
447 -25 325.33 32.5 230 147.5 c
134.67 262.5 87 451 87 713 c
87 981.67 136.67 1175.33 236 1294 c
335.33 1412.67 464.33 1472 623 1472 c
734.33 1472 826.5 1440.83 899.5 1378.5 c
972.5 1316.17 1019 1225.67 1039 1107 c
closepath 402 494 m
402 402.67 423 332.17 465 282.5 c
507 232.83 555 208 609 208 c
661 208 704.33 228.33 739 269 c
773.67 309.67 791 376.33 791 469 c
791 564.33 772.33 634.17 735 678.5 c
697.67 722.83 651 745 595 745 c
541 745 495.33 723.83 458 681.5 c
420.67 639.17 402 576.67 402 494 c
closepath } bind def
/s55 {
87 1185 m
87 1446 87 1185 87 1446 c
1048 1446 87 1446 1048 1446 c
1048 1242 1048 1446 1048 1242 c
968.67 1164 888 1052 806 906 c
724 760 661.5 604.83 618.5 440.5 c
575.5 276.17 554.33 129.33 555 0 c
284 0 555 0 284 0 c
288.67 202.67 330.5 409.33 409.5 620 c
488.5 830.67 594 1019 726 1185 c
87 1185 726 1185 87 1185 c
closepath } bind def
/s56 {
328 791 m
255.33 821.67 202.5 863.83 169.5 917.5 c
136.5 971.17 120 1030 120 1094 c
120 1203.33 158.17 1293.67 234.5 1365 c
310.83 1436.33 419.33 1472 560 1472 c
699.33 1472 807.5 1436.33 884.5 1365 c
961.5 1293.67 1000 1203.33 1000 1094 c
1000 1026 982.33 965.5 947 912.5 c
911.67 859.5 862 819 798 791 c
879.33 758.33 941.17 710.67 983.5 648 c
1025.83 585.33 1047 513 1047 431 c
1047 295.67 1003.83 185.67 917.5 101 c
831.17 16.33 716.33 -26 573 -26 c
439.67 -26 328.67 9 240 79 c
135.33 161.67 83 275 83 419 c
83 498.33 102.67 571.17 142 637.5 c
181.33 703.83 243.33 755 328 791 c
closepath 386 1074 m
386 1018 401.83 974.33 433.5 943 c
465.17 911.67 507.33 896 560 896 c
613.33 896 656 911.83 688 943.5 c
720 975.17 736 1019 736 1075 c
736 1127.67 720.17 1169.83 688.5 1201.5 c
656.83 1233.17 615 1249 563 1249 c
509 1249 466 1233 434 1201 c
402 1169 386 1126.67 386 1074 c
closepath 360 446 m
360 368.67 379.83 308.33 419.5 265 c
459.17 221.67 508.67 200 568 200 c
626 200 674 220.83 712 262.5 c
750 304.17 769 364.33 769 443 c
769 511.67 749.67 566.83 711 608.5 c
672.33 650.17 623.33 671 564 671 c
495.33 671 444.17 647.33 410.5 600 c
376.83 552.67 360 501.33 360 446 c
closepath } bind def
/s57 {
93 339 m
365 369 93 339 365 369 c
371.67 313.67 389 272.67 417 246 c
445 219.33 482 206 528 206 c
586 206 635.33 232.67 676 286 c
716.67 339.33 742.67 450 754 618 c
683.33 536 595 495 489 495 c
373.67 495 274.17 539.5 190.5 628.5 c
106.83 717.5 65 833.33 65 976 c
65 1124.67 109.17 1244.5 197.5 1335.5 c
285.83 1426.5 398.33 1472 535 1472 c
683.67 1472 805.67 1414.5 901 1299.5 c
996.33 1184.5 1044 995.33 1044 732 c
1044 464 994.33 270.67 895 152 c
795.67 33.33 666.33 -26 507 -26 c
392.33 -26 299.67 4.5 229 65.5 c
158.33 126.5 113 217.67 93 339 c
closepath 729 953 m
729 1043.67 708.17 1114 666.5 1164 c
624.83 1214 576.67 1239 522 1239 c
470 1239 426.83 1218.5 392.5 1177.5 c
358.17 1136.5 341 1069.33 341 976 c
341 881.33 359.67 811.83 397 767.5 c
434.33 723.17 481 701 537 701 c
591 701 636.5 722.33 673.5 765 c
710.5 807.67 729 870.33 729 953 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC1_ArialBold exch definefont pop
%%EndFont
%%BeginFont: /MC2_ArialBold
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 215.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC2_ArialBold def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1286 -771 4096 2162] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 45/s45 put
Encoding 50/s50 put
Encoding 67/s67 put
Encoding 68/s68 put
Encoding 69/s69 put
Encoding 77/s77 put
Encoding 79/s79 put
Encoding 80/s80 put
Encoding 83/s83 put
Encoding 84/s84 put
Encoding 110/s110 put
/BoundingBoxes 13 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s45 [0 -434 682 1854] def
/s50 [0 -434 1139 1854] def
/s67 [0 -434 1479 1854] def
/s68 [0 -434 1479 1854] def
/s69 [0 -434 1366 1854] def
/s77 [0 -434 1706 1854] def
/s79 [0 -434 1593 1854] def
/s80 [0 -434 1366 1854] def
/s83 [0 -434 1366 1854] def
/s84 [0 -434 1251 1854] def
/s110 [0 -434 1251 1854] def
end
/Metrics 13 dict def
 Metrics begin
/s32 569 def
/s45 682 def
/s50 1139 def
/s67 1479 def
/s68 1479 def
/s69 1366 def
/s77 1706 def
/s79 1593 def
/s80 1366 def
/s83 1366 def
/s84 1251 def
/s110 1251 def
end
/CharProcs 13 dict def
CharProcs begin
/.notdef {} def
/s45 {
115 391 m
115 672 115 391 115 672 c
667 672 115 672 667 672 c
667 391 667 672 667 391 c
115 391 667 391 115 391 c
closepath } bind def
/s50 {
1036 261 m
1036 0 1036 261 1036 0 c
51 0 1036 0 51 0 c
61.67 98.67 93.67 192.17 147 280.5 c
200.33 368.83 305.67 486 463 632 c
589.67 750 667.33 830 696 872 c
734.67 930 754 987.33 754 1044 c
754 1106.67 737.17 1154.83 703.5 1188.5 c
669.83 1222.17 623.33 1239 564 1239 c
505.33 1239 458.67 1221.33 424 1186 c
389.33 1150.67 369.33 1092 364 1010 c
84 1038 364 1010 84 1038 c
100.67 1192.67 153 1303.67 241 1371 c
329 1438.33 439 1472 571 1472 c
715.67 1472 829.33 1433 912 1355 c
994.67 1277 1036 1180 1036 1064 c
1036 998 1024.17 935.17 1000.5 875.5 c
976.83 815.83 939.33 753.33 888 688 c
854 644.67 792.67 582.33 704 501 c
615.33 419.67 559.17 365.67 535.5 339 c
511.83 312.33 492.67 286.33 478 261 c
1036 261 478 261 1036 261 c
closepath } bind def
/s67 {
1087 539 m
1374 448 1087 539 1374 448 c
1330 288 1256.83 169.17 1154.5 91.5 c
1052.17 13.83 922.33 -25 765 -25 c
570.33 -25 410.33 41.5 285 174.5 c
159.67 307.5 97 489.33 97 720 c
97 964 160 1153.5 286 1288.5 c
412 1423.5 577.67 1491 783 1491 c
962.33 1491 1108 1438 1220 1332 c
1286.67 1269.33 1336.67 1179.33 1370 1062 c
1077 992 1370 1062 1077 992 c
1059.67 1068 1023.5 1128 968.5 1172 c
913.5 1216 846.67 1238 768 1238 c
659.33 1238 571.17 1199 503.5 1121 c
435.83 1043 402 916.67 402 742 c
402 556.67 435.33 424.67 502 346 c
568.67 267.33 655.33 228 762 228 c
840.67 228 908.33 253 965 303 c
1021.67 353 1062.33 431.67 1087 539 c
closepath } bind def
/s68 {
148 1466 m
689 1466 148 1466 689 1466 c
811 1466 904 1456.67 968 1438 c
1054 1412.67 1127.67 1367.67 1189 1303 c
1250.33 1238.33 1297 1159.17 1329 1065.5 c
1361 971.83 1377 856.33 1377 719 c
1377 598.33 1362 494.33 1332 407 c
1295.33 300.33 1243 214 1175 148 c
1123.67 98 1054.33 59 967 31 c
901.67 10.33 814.33 0 705 0 c
148 0 705 0 148 0 c
148 1466 148 0 148 1466 c
closepath 444 1218 m
444 247 444 1218 444 247 c
665 247 444 247 665 247 c
747.67 247 807.33 251.67 844 261 c
892 273 931.83 293.33 963.5 322 c
995.17 350.67 1021 397.83 1041 463.5 c
1061 529.17 1071 618.67 1071 732 c
1071 845.33 1061 932.33 1041 993 c
1021 1053.67 993 1101 957 1135 c
921 1169 875.33 1192 820 1204 c
778.67 1213.33 697.67 1218 577 1218 c
444 1218 577 1218 444 1218 c
closepath } bind def
/s69 {
149 0 m
149 1466 149 0 149 1466 c
1236 1466 149 1466 1236 1466 c
1236 1218 1236 1466 1236 1218 c
445 1218 1236 1218 445 1218 c
445 893 445 1218 445 893 c
1181 893 445 893 1181 893 c
1181 646 1181 893 1181 646 c
445 646 1181 646 445 646 c
445 247 445 646 445 247 c
1264 247 445 247 1264 247 c
1264 0 1264 247 1264 0 c
149 0 1264 0 149 0 c
closepath } bind def
/s77 {
145 0 m
145 1466 145 0 145 1466 c
588 1466 145 1466 588 1466 c
854 466 588 1466 854 466 c
1117 1466 854 466 1117 1466 c
1561 1466 1117 1466 1561 1466 c
1561 0 1561 1466 1561 0 c
1286 0 1561 0 1286 0 c
1286 1154 1286 0 1286 1154 c
995 0 1286 1154 995 0 c
710 0 995 0 710 0 c
420 1154 710 0 420 1154 c
420 0 420 1154 420 0 c
145 0 420 0 145 0 c
closepath } bind def
/s79 {
89 724 m
89 873.33 111.33 998.67 156 1100 c
189.33 1174.67 234.83 1241.67 292.5 1301 c
350.17 1360.33 413.33 1404.33 482 1433 c
573.33 1471.67 678.67 1491 798 1491 c
1014 1491 1186.83 1424 1316.5 1290 c
1446.17 1156 1511 969.67 1511 731 c
1511 494.33 1446.67 309.17 1318 175.5 c
1189.33 41.83 1017.33 -25 802 -25 c
584 -25 410.67 41.5 282 174.5 c
153.33 307.5 89 490.67 89 724 c
closepath 394 734 m
394 568 432.33 442.17 509 356.5 c
585.67 270.83 683 228 801 228 c
919 228 1015.83 270.5 1091.5 355.5 c
1167.17 440.5 1205 568 1205 738 c
1205 906 1168.17 1031.33 1094.5 1114 c
1020.83 1196.67 923 1238 801 1238 c
679 1238 580.67 1196.17 506 1112.5 c
431.33 1028.83 394 902.67 394 734 c
closepath } bind def
/s80 {
149 0 m
149 1466 149 0 149 1466 c
624 1466 149 1466 624 1466 c
804 1466 921.33 1458.67 976 1444 c
1060 1422 1130.33 1374.17 1187 1300.5 c
1243.67 1226.83 1272 1131.67 1272 1015 c
1272 925 1255.67 849.33 1223 788 c
1190.33 726.67 1148.83 678.5 1098.5 643.5 c
1048.17 608.5 997 585.33 945 574 c
874.33 560 772 553 638 553 c
445 553 638 553 445 553 c
445 0 445 553 445 0 c
149 0 445 0 149 0 c
closepath 445 1218 m
445 802 445 1218 445 802 c
607 802 445 802 607 802 c
723.67 802 801.67 809.67 841 825 c
880.33 840.33 911.17 864.33 933.5 897 c
955.83 929.67 967 967.67 967 1011 c
967 1064.33 951.33 1108.33 920 1143 c
888.67 1177.67 849 1199.33 801 1208 c
765.67 1214.67 694.67 1218 588 1218 c
445 1218 588 1218 445 1218 c
closepath } bind def
/s83 {
74 477 m
362 505 74 477 362 505 c
379.33 408.33 414.5 337.33 467.5 292 c
520.5 246.67 592 224 682 224 c
777.33 224 849.17 244.17 897.5 284.5 c
945.83 324.83 970 372 970 426 c
970 460.67 959.83 490.17 939.5 514.5 c
919.17 538.83 883.67 560 833 578 c
798.33 590 719.33 611.33 596 642 c
437.33 681.33 326 729.67 262 787 c
172 867.67 127 966 127 1082 c
127 1156.67 148.17 1226.5 190.5 1291.5 c
232.83 1356.5 293.83 1406 373.5 1440 c
453.17 1474 549.33 1491 662 1491 c
846 1491 984.5 1450.67 1077.5 1370 c
1170.5 1289.33 1219.33 1181.67 1224 1047 c
928 1034 1224 1047 928 1034 c
915.33 1109.33 888.17 1163.5 846.5 1196.5 c
804.83 1229.5 742.33 1246 659 1246 c
573 1246 505.67 1228.33 457 1193 c
425.67 1170.33 410 1140 410 1102 c
410 1067.33 424.67 1037.67 454 1013 c
491.33 981.67 582 949 726 915 c
870 881 976.5 845.83 1045.5 809.5 c
1114.5 773.17 1168.5 723.5 1207.5 660.5 c
1246.5 597.5 1266 519.67 1266 427 c
1266 343 1242.67 264.33 1196 191 c
1149.33 117.67 1083.33 63.17 998 27.5 c
912.67 -8.17 806.33 -26 679 -26 c
493.67 -26 351.33 16.83 252 102.5 c
152.67 188.17 93.33 313 74 477 c
closepath } bind def
/s84 {
479 0 m
479 1218 479 0 479 1218 c
44 1218 479 1218 44 1218 c
44 1466 44 1218 44 1466 c
1209 1466 44 1466 1209 1466 c
1209 1218 1209 1466 1209 1218 c
775 1218 1209 1218 775 1218 c
775 0 775 1218 775 0 c
479 0 775 0 479 0 c
closepath } bind def
/s110 {
1113 0 m
832 0 1113 0 832 0 c
832 542 832 0 832 542 c
832 656.67 826 730.83 814 764.5 c
802 798.17 782.5 824.33 755.5 843 c
728.5 861.67 696 871 658 871 c
609.33 871 565.67 857.67 527 831 c
488.33 804.33 461.83 769 447.5 725 c
433.17 681 426 599.67 426 481 c
426 0 426 481 426 0 c
145 0 426 0 145 0 c
145 1062 145 0 145 1062 c
406 1062 145 1062 406 1062 c
406 906 406 1062 406 906 c
498.67 1026 615.33 1086 756 1086 c
818 1086 874.67 1074.83 926 1052.5 c
977.33 1030.17 1016.17 1001.67 1042.5 967 c
1068.83 932.33 1087.17 893 1097.5 849 c
1107.83 805 1113 742 1113 660 c
1113 0 1113 660 1113 0 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC2_ArialBold exch definefont pop
%%EndFont
%%BeginFont: /MC3_ArialBold
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 215.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC3_ArialBold def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1286 -771 4096 2162] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 44/s44 put
Encoding 49/s49 put
Encoding 69/s69 put
Encoding 73/s73 put
Encoding 86/s86 put
Encoding 101/s101 put
/BoundingBoxes 8 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s44 [0 -434 569 1854] def
/s49 [0 -434 1139 1854] def
/s69 [0 -434 1366 1854] def
/s73 [0 -434 569 1854] def
/s86 [-1 -434 1366 1854] def
/s101 [0 -434 1139 1854] def
end
/Metrics 8 dict def
 Metrics begin
/s32 569 def
/s44 569 def
/s49 1139 def
/s69 1366 def
/s73 569 def
/s86 1366 def
/s101 1139 def
end
/CharProcs 8 dict def
CharProcs begin
/.notdef {} def
/s44 {
140 281 m
421 281 140 281 421 281 c
421 80 421 281 421 80 c
421 -1.33 414 -65.5 400 -112.5 c
386 -159.5 359.5 -201.67 320.5 -239 c
281.5 -276.33 232 -305.67 172 -327 c
117 -211 172 -327 117 -211 c
173.67 -192.33 214 -166.67 238 -134 c
262 -101.33 274.67 -56.67 276 0 c
140 0 276 0 140 0 c
140 281 140 0 140 281 c
closepath } bind def
/s49 {
806 0 m
525 0 806 0 525 0 c
525 1059 525 0 525 1059 c
422.33 963 301.33 892 162 846 c
162 1101 162 846 162 1101 c
235.33 1125 315 1170.5 401 1237.5 c
487 1304.5 546 1382.67 578 1472 c
806 1472 578 1472 806 1472 c
806 0 806 1472 806 0 c
closepath } bind def
/s69 {
149 0 m
149 1466 149 0 149 1466 c
1236 1466 149 1466 1236 1466 c
1236 1218 1236 1466 1236 1218 c
445 1218 1236 1218 445 1218 c
445 893 445 1218 445 893 c
1181 893 445 893 1181 893 c
1181 646 1181 893 1181 646 c
445 646 1181 646 445 646 c
445 247 445 646 445 247 c
1264 247 445 247 1264 247 c
1264 0 1264 247 1264 0 c
149 0 1264 0 149 0 c
closepath } bind def
/s73 {
140 0 m
140 1466 140 0 140 1466 c
436 1466 140 1466 436 1466 c
436 0 436 1466 436 0 c
140 0 436 0 140 0 c
closepath } bind def
/s86 {
523 0 m
-1 1466 523 0 -1 1466 c
320 1466 -1 1466 320 1466 c
691 381 320 1466 691 381 c
1050 1466 691 381 1050 1466 c
1364 1466 1050 1466 1364 1466 c
839 0 1364 1466 839 0 c
523 0 839 0 523 0 c
closepath } bind def
/s101 {
762 338 m
1042 291 762 338 1042 291 c
1006 188.33 949.17 110.17 871.5 56.5 c
793.83 2.83 696.67 -24 580 -24 c
395.33 -24 258.67 36.33 170 157 c
100 253.67 65 375.67 65 523 c
65 699 111 836.83 203 936.5 c
295 1036.17 411.33 1086 552 1086 c
710 1086 834.67 1033.83 926 929.5 c
1017.33 825.17 1061 665.33 1057 450 c
353 450 1057 450 353 450 c
355 366.67 377.67 301.83 421 255.5 c
464.33 209.17 518.33 186 583 186 c
627 186 664 198 694 222 c
724 246 746.67 284.67 762 338 c
closepath 778 622 m
776 703.33 755 765.17 715 807.5 c
675 849.83 626.33 871 569 871 c
507.67 871 457 848.67 417 804 c
377 759.33 357.33 698.67 358 622 c
778 622 358 622 778 622 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC3_ArialBold exch definefont pop
%%EndFont
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 767 586.09 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.345855 0.351704 sc

/initmtx mtx cmtx def
[0.693898 -0 0 -0.682415 0 1666.43] concat
gs
gs
1 -1 sc
/MC1_ArialBold 75 self 792 -2149 m
(1)[42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 75 self 1035 -2149 m
(2)[42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 75 self 1277 -2149 m
(3)[42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 75 self 1519 -2149 m
(4)[42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 75 self 1762 -2149 m
(5)[42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 75 self 2004 -2149 m
(6)[42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 75 self 2246 -2149 m
(7)[42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 75 self 2489 -2149 m
(8)[42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 75 self 409 -2057 m
(6.5)[42 21 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 75 self 409 -1862 m
(7.0)[42 21 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 75 self 409 -1668 m
(7.5)[42 21 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 75 self 409 -1473 m
(8.0)[42 21 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 75 self 409 -1278 m
(8.5)[42 21 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 75 self 409 -1084 m
(9.0)[42 21 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 75 self 409 -889 m
(9.5)[42 21 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 75 self 367 -694 m
(10.0)[42 42 21 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 75 self 367 -500 m
(10.5)[42 42 21 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 75 self 367 -305 m
(11.0)[42 42 21 42 ] xs
1 -1 sc
gr
692 2052 m
692 2035 l
9 sw
1 sj
1 scap
st
813 2069 m
813 2035 l
st
934 2052 m
934 2035 l
st
1056 2069 m
1056 2035 l
st
1177 2052 m
1177 2035 l
st
1298 2069 m
1298 2035 l
st
1419 2052 m
1419 2035 l
st
1540 2069 m
1540 2035 l
st
1662 2052 m
1662 2035 l
st
1783 2069 m
1783 2035 l
st
1904 2052 m
1904 2035 l
st
2025 2069 m
2025 2035 l
st
2146 2052 m
2146 2035 l
st
2267 2069 m
2267 2035 l
st
2389 2052 m
2389 2035 l
st
2510 2069 m
2510 2035 l
st
2631 2052 m
2631 2035 l
st
571 2035 m
2752 2035 l
st
537 2035 m
571 2035 l
st
554 1938 m
571 1938 l
st
537 1840 m
571 1840 l
st
554 1743 m
571 1743 l
st
537 1646 m
571 1646 l
st
554 1548 m
571 1548 l
st
537 1451 m
571 1451 l
st
554 1354 m
571 1354 l
st
537 1256 m
571 1256 l
st
554 1159 m
571 1159 l
st
537 1062 m
571 1062 l
st
554 964 m
571 964 l
st
537 867 m
571 867 l
st
554 770 m
571 770 l
st
537 672 m
571 672 l
st
554 575 m
571 575 l
st
537 478 m
571 478 l
st
554 380 m
571 380 l
st
537 283 m
571 283 l
st
571 2035 m
571 283 l
st
gs
pathproc 571 283 2182 1753 np rectpath
/eocl cland
np exec
795 392 36 36 rectfill
571 283 m
3 sw
795 392 36 36 rectstroke
1038 990 36 36 rectfill
1038 990 36 36 rectstroke
1280 1312 36 36 rectfill
1280 1312 36 36 rectstroke
1522 1515 36 36 rectfill
1522 1515 36 36 rectstroke
1765 1655 36 36 rectfill
1765 1655 36 36 rectstroke
2007 1756 36 36 rectfill
2007 1756 36 36 rectstroke
2249 1832 36 36 rectfill
2249 1832 36 36 rectstroke
2492 1892 36 36 rectfill
2492 1892 36 36 rectstroke
gr
gs
pathproc 571 283 2182 1753 np rectpath
/eocl cland
np exec
np
813 460 21 0 360  a
cp
gs
1 0 0 rgb
eofi
gr
3 sw
1 0 0 rgb
st
np
1056 1042 21 0 360  a
cp
gs
eofi
gr
st
np
1298 1348 21 0 360  a
cp
gs
eofi
gr
st
np
1540 1539 21 0 360  a
cp
gs
eofi
gr
st
np
1783 1669 21 0 360  a
cp
gs
eofi
gr
st
np
2025 1762 21 0 360  a
cp
gs
eofi
gr
st
np
2267 1833 21 0 360  a
cp
gs
eofi
gr
st
np
2510 1887 21 0 360  a
cp
gs
eofi
gr
st
gr
gs
pathproc 571 283 2182 1753 np rectpath
/eocl cland
np exec
813 390 m
837 432 l
788 432 l
cp
gs
0 0 1 rgb
eofi
gr
3 sw
0 0 1 rgb
st
1056 964 m
1080 1006 l
1031 1006 l
cp
gs
eofi
gr
st
1298 1265 m
1322 1307 l
1273 1307 l
cp
gs
eofi
gr
st
1540 1452 m
1564 1494 l
1515 1494 l
cp
gs
eofi
gr
st
1783 1579 m
1807 1621 l
1758 1621 l
cp
gs
eofi
gr
st
2025 1670 m
2049 1712 l
2000 1712 l
cp
gs
eofi
gr
st
2267 1739 m
2291 1781 l
2242 1781 l
cp
gs
eofi
gr
st
2510 1793 m
2534 1835 l
2485 1835 l
cp
gs
eofi
gr
st
gr
1991 307 m
2695 307 l
2695 632 l
1991 632 l
cp
gs
1 1 1 rgb
eofi
gr
3 sw
st
gs
gs
2087 349 36 36 rectfill
1991 632 m
2087 349 36 36 rectstroke
gr
1 -1 sc
/MC2_ArialBold 84 self 2199 -395 m
( )[23 ] xs
1 -1 sc
1 -1 sc
2222 -395 m
(EOM-CCSD)[56 65 71 28 61 61 56 61 ] xs
1 -1 sc
gs
np
2105 474 20 0 360  a
cp
gs
1 0 0 rgb
eofi
gr
1 0 0 rgb
st
gr
1 -1 sc
2199 -502 m
( )[23 ] xs
1 -1 sc
1 -1 sc
2222 -502 m
(EOM-MP2T)[56 65 71 28 71 56 47 52 ] xs
1 -1 sc
gs
2105 553 m
2129 595 l
2080 595 l
cp
gs
0 0 1 rgb
eofi
gr
0 0 1 rgb
st
gr
1 -1 sc
2199 -609 m
( )[23 ] xs
1 -1 sc
1 -1 sc
2222 -609 m
(EOM-MP2)[56 65 71 28 71 56 47 ] xs
1 -1 sc
gr
gs
gs
1 -1 sc
293 -1395 tr
90 ro
/MC3_ArialBold 91 self 0 0 m
(VIE)[61 25 61 ] xs
1 -1 sc
gr
gs
1 -1 sc
325 -1248 tr
90 ro
/MC3_ArialBold 55 self 0 0 m
(1)[31 ] xs
1 -1 sc
gr
gs
1 -1 sc
293 -1217 tr
90 ro
/MC3_ArialBold 91 self 0 0 m
(, eV)[25 25 51 61 ] xs
1 -1 sc
gr
gr
gs
1 -1 sc
/MC2_ArialBold 91 self 1633 -2301 m
(n)[56 ] xs
1 -1 sc
gr
gr
Save0 restore end
showpage
%%EOF
